<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pbIcon.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADAAAAAwCAYAAABXAvmHAAAABGdBTUEAALGPC/xhBQAAA8hJREFUaEPt
        mO9LU1EYx1cEKhER9aJf+iYi6G+oEC2ICgv7QQW5zSJKNDIlEK82yBe5OyWkKAgqXdPSzRfWZhiiE1Ff
        pCRkmiwtJW1Koqv5xhenc07Prse7I3O758KofeGDO8/uzud5du/dhoZEEknkPwnqTklD3iQnZhaDNEL2
        cKH2pD2wvb5B3pRU5E3+qWpCAHjPjpTdoNEvWOYKlwuiK7kRNPoFiwIhoXvGj1pmA5pw+/3KAEveTYvp
        9YFtoNInIRlB3UyDbxK9Gp9S1kWPnqM79c3K2j4yjpyTM8o6BLtnRn3wQ2ZtYCvoxIeVqRspfPgUlTMN
        lzxrQBUuj7K+VlmDKpqX1yHYPTMcQcziyEF7cAcoxYaVEfnLse9KI7UffUiyNylrNTfuP0ZNE8uXHTkj
        5C+7Z8aLYB8MMZze+Hs7aMWFldUN+dCp60XI8fmb0tRaedI/hLKu3qRvALvn4ca5zZmOYK9uQ7Ay0kj1
        uy4kezrCGoxEVZsX1XT20cfsnsSh6xCsTN3UWnjtn0dvfSvPGLsnaAwHHPNb/g5AeU/W8JS2sDK2ibXQ
        OjaBBux21DKzsKLO7gkaGmYAghvK2sLK2CYi0T4wiMZLbiF3hI9R0NCoBliCsrawMnUjq9HraUWzF06i
        tk8+7vPsnqChUQ2w4rmYw8p4zYQgN+jp/NvovDkPdZ44irzdPdzjCOyeoKHRfQCPf5rbECE7rxgduXiF
        cu5yPvcYgufH1OoDKN8JlB4oawsr0wPQKDGVyYsYdLawOgVK2sKTigQ0SnDzE2SAHMu9NChpC08qEtAo
        MUlyPxnAWGo7BCVt4UlFAholpnLbAzpAmfUulLSFJxUJaJSYJFs2GQAzjO3roBx7eFKRgEZJQUFNEm5+
        mp6Fcvk4lGMPTyoSeLcx1i8myXqMOM2SXEJq5jJ5wGKxrKeNxBqeVCTLA1C+Eif5CCWPSc0s2c7QRmIN
        TyoS0JCPTzoELA34Js6hNUke1HQv8KQiAU3YAPjS2YDXo6RmlKqyoBx9eFKRgCZsABJ8D+TTuiTXQSn6
        8KQiAQ1/AIttP9RHoRR9eFKRgIY7wKVieSOpGcvkX1CKPjypSEBDBlggzeaUVu+CksFcWpUKg81DKfrw
        pCIBDbnem6HZN7mWyp1kEPzYDTUnHBZ9eFKRgMaQK1Xuw43OQcMsc/gLbi8cFn14UpGAhob8hMYNOzEB
        DLmkXEbJqu3f8DypSECjX3hSkYBGXPBpU1+DcQG0Fzm8F8cD0F7k8F4cD0B7kcN7cTwA7SWSSCL/TgyG
        Px/h+NCCD4A+AAAAAElFTkSuQmCC
</value>
  </data>
</root>