<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="cardTransactions.CardIcon" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        Rv4DWeSwzQDtT+kAAAAASUVORK5CYII=
</value>
  </data>
</root>