using Petrol_Pump_Point_Of_Sale_System.Core.Repositories;
using System.Collections.Generic;
using System.Data.Entity;
using System.Linq;
using System.Threading.Tasks;
using Petrol_Pump_Point_Of_Sale_System.Models;

namespace Petrol_Pump_Point_Of_Sale_System.Persistence.Repositories
{
    public class UserRepository : Repository<User> , IUserRepository
    {
        public UserRepository(DatabaseContext context) 
            : base(context)
        {
               
        }
        public IEnumerable<User> SearchUsers(string searchValue)
        {
            return DatabaseContext.Users.Where(u => u.Username.Contains(searchValue)).ToList();
        }

        
        public  IEnumerable<dynamic> GetAllUsers(bool status = true)
        {
            return DatabaseContext.Users
                .Where(u => u.IsActive == status)
                .Select(u => new
                {
                    u.Id,
                    u.Username,
                    u.Name,
                    Role = u.Role.UserRoleName

                }).ToList();
        
        }


        public async Task<User> CheckLoginUser(string username, string password)
        {
            return await 
                DatabaseContext.Users
                .Where(u => u.Username == username &&
                            u.Password == password &&
                            u.IsActive).SingleOrDefaultAsync();         
        }

        public bool UserNameAlreadyUsed(string userName)
        {
            return DatabaseContext.Users
                       .Count(u => u.Username == userName) == 1;
        }

        public bool UserNameAlreadyUsed(string userName, int id)
        {
            return DatabaseContext.Users
                       .Count(u => u.Username == userName && u.Id != id) == 1;
        }


        public DatabaseContext DatabaseContext
        {
            get { return Context; }
        }
    }
}
